(self.webpackChunkvuepressblogdemo=self.webpackChunkvuepressblogdemo||[]).push([[522],{795:(e,a,s)=>{"use strict";s.r(a),s.d(a,{data:()=>n});const n={key:"v-eefd0fbe",path:"/develop/%E6%B3%9B%E5%BE%AE%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.html",title:"泛微后端开发环境搭建",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、安装idea和ecode",slug:"一、安装idea和ecode",children:[]},{level:2,title:"二、创建项目",slug:"二、创建项目",children:[]},{level:2,title:"三、配置javaSDK",slug:"三、配置javasdk",children:[]},{level:2,title:"四、配置项目依赖",slug:"四、配置项目依赖",children:[]},{level:2,title:"五、编写测试代码",slug:"五、编写测试代码",children:[]},{level:2,title:"六、配置编译",slug:"六、配置编译",children:[]},{level:2,title:"七、Jersey接口发布",slug:"七、jersey接口发布",children:[{level:3,title:"1.映射接口",slug:"_1-映射接口",children:[]},{level:3,title:"2.Jersey接口Params对象映射",slug:"_2-jersey接口params对象映射",children:[]},{level:3,title:"（3）路径规范",slug:"_3-路径规范",children:[]}]}],filePathRelative:"develop/泛微后端开发环境搭建.md",git:{}}},761:(e,a,s)=>{"use strict";s.r(a),s.d(a,{default:()=>D});var n=s(252);const l=(0,n.uE)('<h1 id="泛微后端开发环境搭建" tabindex="-1"><a class="header-anchor" href="#泛微后端开发环境搭建" aria-hidden="true">#</a> 泛微后端开发环境搭建</h1><h2 id="一、安装idea和ecode" tabindex="-1"><a class="header-anchor" href="#一、安装idea和ecode" aria-hidden="true">#</a> 一、安装idea和ecode</h2><ul><li>本地pc环境安装idea请根据JetBrains官方说明操作，本文不提供此步骤说明</li><li>ecology环境安装eocde最新版</li></ul><h2 id="二、创建项目" tabindex="-1"><a class="header-anchor" href="#二、创建项目" aria-hidden="true">#</a> 二、创建项目</h2><ul><li>1、新建项目：File-&gt;New-&gt;Project <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590742344000.png" alt="img"></li><li>2、选择java项目 <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590742274000.png" alt="img"></li><li>3、下一步：Next <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590743066000.png" alt="img"></li><li>4、继续下一步：Next，并输入项目名字之后点击Finish <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590743142000.png" alt="img"></li></ul><h2 id="三、配置javasdk" tabindex="-1"><a class="header-anchor" href="#三、配置javasdk" aria-hidden="true">#</a> 三、配置javaSDK</h2>',6),r=(0,n.Uk)("ecology开发推荐使用idea，idea版权归属："),o={href:"https://www.jetbrains.com/",target:"_blank",rel:"noopener noreferrer"},t=(0,n.Uk)("JetBrains"),p=(0,n.uE)('<ul><li>1、进入项目设置File-Project Structure <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590743443000.png" alt="img"></li><li>2、点击SDKs-&gt;+，添加jdk1.8（e9依赖的版本） <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590744883000.png" alt="img"></li><li>3、点击project，分别选择Project SDK为1.8、、Project language level为SDK default 8 <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590744997000.png" alt="img"></li></ul><h2 id="四、配置项目依赖" tabindex="-1"><a class="header-anchor" href="#四、配置项目依赖" aria-hidden="true">#</a> 四、配置项目依赖</h2>',2),i=(0,n.Uk)("ecology开发推荐使用idea，idea版权归属："),c={href:"https://www.jetbrains.com/",target:"_blank",rel:"noopener noreferrer"},u=(0,n.Uk)("JetBrains"),d=(0,n.uE)('<ul><li><p>1、进入项目设置：File-&gt;Project Structure <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590743443000.png" alt="img"></p></li><li><p>2、添加依赖库：Libaries-&gt;+-&gt;java <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590744481000.png" alt="img"></p></li><li><p>3、找到要调试的ecology demo环境，分别引入以下路径的包</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ecology/classbeanecology/web-inf/libresin4/lib\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590744647000.png" alt="img"></p></li><li><p>4、添加完之后点击Apply <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590744772000.png" alt="img"></p></li></ul><h2 id="五、编写测试代码" tabindex="-1"><a class="header-anchor" href="#五、编写测试代码" aria-hidden="true">#</a> 五、编写测试代码</h2>',2),m=(0,n.Uk)("ecology开发推荐使用idea，idea版权归属："),g={href:"https://www.jetbrains.com/",target:"_blank",rel:"noopener noreferrer"},b=(0,n.Uk)("JetBrains"),v=(0,n.Wm)("li",null,[(0,n.Uk)("1、点击src右键->new->Package "),(0,n.Wm)("img",{src:"D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590745681000.png",alt:"img"})],-1),h=(0,n.Uk)("2、右键点击包名->new->Java，注意包名带有impl层级，才可支持"),f={href:"https://e-cloudstore.com/doc.html?appId=84e77d7890a14c439590b37707251859#2%E3%80%81Jersey%E6%8E%A5%E5%8F%A3%E6%97%A0%E4%BE%B5%E5%85%A5%E5%BC%80%E5%8F%91",target:"_blank",rel:"noopener noreferrer"},k=(0,n.Uk)("无侵入注解解析"),j=(0,n.Wm)("img",{src:"D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590745858000.png",alt:"img"},null,-1),w=(0,n.Wm)("li",null,"3、测试代码如下：",-1),P=(0,n.uE)('<div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>package com.api.cs.test20200529.service.impl;import com.weaverboot.frame.ioc.anno.classAnno.WeaIocReplaceComponent;import com.weaverboot.frame.ioc.anno.methodAnno.WeaReplaceAfter;import com.weaverboot.frame.ioc.anno.methodAnno.WeaReplaceBefore;import com.weaverboot.frame.ioc.handler.replace.weaReplaceParam.impl.WeaAfterReplaceParam;import com.weaverboot.frame.ioc.handler.replace.weaReplaceParam.impl.WeaBeforeReplaceParam;import com.weaverboot.tools.logTools.LogTools;@WeaIocReplaceComponentpublic class Test {    @WeaReplaceBefore(value = &quot;/api/workflow/reqlist/splitPageKey&quot;,order = 1,description = &quot;测试拦截前置&quot;)    public void beforeTest(WeaBeforeReplaceParam weaBeforeReplaceParam){        //一顿操作        LogTools.info(&quot;before:/api/workflow/reqlist/splitPageKey&quot;);    }    @WeaReplaceAfter(value = &quot;/api/workflow/reqlist/splitPageKey&quot;,order = 1,description = &quot;测试拦截后置&quot;)    public String after(WeaAfterReplaceParam weaAfterReplaceParam){        String data = weaAfterReplaceParam.getData();//这个就是接口执行完的报文        LogTools.info(&quot;after:/api/workflow/reqlist/splitPageKey&quot;);//        LogTools.info(data);        return data;    }}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="六、配置编译" tabindex="-1"><a class="header-anchor" href="#六、配置编译" aria-hidden="true">#</a> 六、配置编译</h2>',2),B=(0,n.Uk)("ecology开发推荐使用idea，idea版权归属："),x={href:"https://www.jetbrains.com/",target:"_blank",rel:"noopener noreferrer"},_=(0,n.Uk)("JetBrains"),W=(0,n.uE)('<ul><li><p>1、进入项目设置：File-&gt;Project Structure <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590743443000.png" alt="img"></p></li><li><p>2、进入Artifacts-&gt;+-&gt;JAR-&gt;Empty <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590759176000.png" alt="img"></p></li><li><p>3、修改Name，这里要注意的是如果要支持无侵入注解解析，jar包名称必须包含下划线前缀，类似示例的写法 <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590759246000.png" alt="img"></p></li><li><p>4、修改jar包输出目录（output directory）到以下目录</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ecology/web-inf/lib\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590759388000.png" alt="img"></p></li><li><p>5、添加src输出内容到jar包，点击Apply <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590759988000.png" alt="img"></p></li><li><p>6、选择build-&gt;Build Artifacts <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590760064000.png" alt="img"></p></li><li><p>7、点击build，即可完成编译 <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590760094000.png" alt="img"></p></li><li><p>8、到系统中查看编译结果 <img src="D:\\Projects\\Vuepress\\vuepressBlog\\docs\\develop\\file_1590760125000.png" alt="img"></p></li></ul><h2 id="七、jersey接口发布" tabindex="-1"><a class="header-anchor" href="#七、jersey接口发布" aria-hidden="true">#</a> 七、Jersey接口发布</h2><blockquote><p>用于快速发布http接口</p></blockquote><h3 id="_1-映射接口" tabindex="-1"><a class="header-anchor" href="#_1-映射接口" aria-hidden="true">#</a> 1.映射接口</h3><p>java入口文件一定要在com.api路径下</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Path</span><span class="token punctuation">(</span><span class="token string">&quot;/workflow/v1&quot;</span><span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Service_Test</span> <span class="token punctuation">{</span>\n        <span class="token annotation punctuation">@GET</span>\n    <span class="token annotation punctuation">@Path</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>\n    <span class="token annotation punctuation">@Produces</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>TEXT_PLAIN<span class="token punctuation">)</span>\n    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Context</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span><span class="token annotation punctuation">@Context</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span><span class="token punctuation">{</span>test<span class="token operator">:</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_2-jersey接口params对象映射" tabindex="-1"><a class="header-anchor" href="#_2-jersey接口params对象映射" aria-hidden="true">#</a> 2.Jersey接口Params对象映射</h3>',8),y={href:"https://e-cloudstore.com/doc.html?appId=ff36dac4f406452fbba19ee5714705c9",target:"_blank",rel:"noopener noreferrer"},E=(0,n.Uk)("点击查看"),q=(0,n.uE)('<h3 id="_3-路径规范" tabindex="-1"><a class="header-anchor" href="#_3-路径规范" aria-hidden="true">#</a> （3）路径规范</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>模块    文件路径（含下级）    接口访问地址\n流程    com.api.workflow    /api/workflow/…\n门户    com.api.portal    /api/portal/…\n文档    com.api.doc    /api/doc/…\n建模    com.api.formmode    /api/formmode/…\n移动建模    com.api.mobilemode    /api/mobilemode/…\n会议    com.api.meeting    /api/meeting/…\n人力    com.api.hrm    /api/hrm/…\n财务    com.api.fna    /api/fna/…\n项目    com.api.prj    /api/prj/…\n公文    com.api.odoc    /api/odoc/…\n集成    com.api.integration    /api/integration/…\n微博    com.api.blog    /api/blog/…\n其它模块以此类推\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',3),D={render:function(e,a){const s=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.j4)(n.HY,null,[l,(0,n.Wm)("blockquote",null,[(0,n.Wm)("p",null,[r,(0,n.Wm)("a",o,[t,(0,n.Wm)(s)])])]),p,(0,n.Wm)("blockquote",null,[(0,n.Wm)("p",null,[i,(0,n.Wm)("a",c,[u,(0,n.Wm)(s)])])]),d,(0,n.Wm)("blockquote",null,[(0,n.Wm)("p",null,[m,(0,n.Wm)("a",g,[b,(0,n.Wm)(s)])])]),(0,n.Wm)("ul",null,[v,(0,n.Wm)("li",null,[h,(0,n.Wm)("a",f,[k,(0,n.Wm)(s)]),j]),w]),P,(0,n.Wm)("blockquote",null,[(0,n.Wm)("p",null,[B,(0,n.Wm)("a",x,[_,(0,n.Wm)(s)])])]),W,(0,n.Wm)("p",null,[(0,n.Wm)("a",y,[E,(0,n.Wm)(s)])]),q],64)}}}}]);